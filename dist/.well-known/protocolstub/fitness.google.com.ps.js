!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return f});var r=n(1);function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e,t,n){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var l={name:"GoogleProtoStub",language:"javascript",description:"Protostub of Google",signature:"",configuration:{sessions_query_interval:3e5,domain:"localhost"},constraints:{browser:!0},interworking:!0,objectName:"fitness.google.com"},f=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),s(this,c(t).call(this))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,r["a"]),function(e,t,n){t&&i(e.prototype,t),n&&i(e,n)}(t,[{key:"_start",value:function(e,n,r,o){a(c(t.prototype),"init",this).call(this,e,n,r,o,"GoogleProtoStub")}},{key:"querySessions",value:function(e,t){var n=this;e!==t&&(e=t);var r=new Date,o=r.toISOString(),i=r.getTime(),s=new Date(e).getTime();(new XMLHttpRequest).withCredentials=!0,n.getDistanceForActivities(s,i).then(function(e){for(var t=0;t<e.length;t+=1){var r=e[t],i=r.activity,a=r.dataset[0].point[0].value[0].fpVal,c=new Date(s).toISOString();switch(i){case 7:case 8:console.log("[GoogleProtoStub] walking/running distance (m): ",a),n.writeToReporter("walk",a,c,o);break;case 1:console.log("[GoogleProtoStub] biking distance (m): ",a),n.writeToReporter("bike",a,c,o)}}},function(r){if(r.hasOwnProperty("errorCode")&&401===r.errorCode)return n.refreshAccessToken(e,t,"google.com");throw r}).catch(function(e){n._sendStatus("disconnected",e),console.error("[GoogleProtoStub.querySessions] error: ",e)})}},{key:"getDistanceForActivities",value:function(e,t){var n=this;return new Promise(function(r,o){var i={aggregateBy:[{dataTypeName:"com.google.distance.delta"}],bucketByActivityType:{minDurationMillis:0},startTimeMillis:e,endTimeMillis:t},s=new XMLHttpRequest;s.withCredentials=!0,s.addEventListener("readystatechange",function(){if(4===this.readyState){var e=JSON.parse(this.responseText);console.log("[GoogleProtoStub.getDistanceForActivities] response: ",e),e.hasOwnProperty("bucket")?r(e.bucket):e.hasOwnProperty("code")&&e.code>299?o({errorCode:e.code}):o(e)}}),s.open("POST","https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate"),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("Authorization","Bearer "+n._accessToken),s.setRequestHeader("Cache-Control","no-cache"),s.send(JSON.stringify(i))})}},{key:"descriptor",get:function(){return l}},{key:"name",get:function(){return l.name}}]),t}()},function(e,t,n){"use strict";function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}n.d(t,"a",function(){return o});var o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return function(e,t,n){t&&r(e.prototype,t),n&&r(e,n)}(e,[{key:"_init",value:function(e,t,n,r,o){if(this._stubName=o,!e)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!t)throw new Error("The bus is a needed parameter");if(!n)throw new Error("The config is a needed parameter");if(!n.runtimeURL)throw new Error("The config.runtimeURL is a needed parameter");var i=this;console.log("[".concat(this._stubName,"] PROTOSTUB"),i),this._id=0,this._runtimeProtoStubURL=e,this._bus=t,this._config=n,this._domain=n.domain,this._runtimeSessionURL=n.runtimeURL,this._syncher=r.createSyncher(e,t,n),this._userActivityVertxHypertyURL="hyperty://sharing-cities-dsm/user-activity",i._sendStatus("created"),i.started=!1;t.addListener("*",function(e){if(console.log("".concat(i._stubName," new Message  : "),e),e.identity&&(i._identity=e.identity),"delete"!==e.type){if(e.hasOwnProperty("body")&&e.body.hasOwnProperty("identity")){if(e.body.identity.accessToken){i._accessToken=e.body.identity.accessToken;var t={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,runtimeURL:i._runtimeSessionURL}};console.log(i),i._bus.postMessage(t)}i.hypertyJSUrl=e.from}var n="hyperty-catalogue://catalogue."+i._domain+"/.well-known/dataschema/Context",r={id:"1276020076",values:[{type:"user_walking_context",name:"walking distance in meters",unit:"meter",value:0,startTime:"2018-03-25T12:00:00Z",endTime:"2018-03-25T12:10:00Z"},{type:"user_biking_context",name:"biking distance in meters",unit:"meter",value:0,startTime:"2018-03-26T12:00:00Z",endTime:"2018-03-26T12:10:00Z"}]};i._accessToken&&!i.started&&"create"===e.type&&i._resumeReporters("user_activity",e.to).then(function(t){console.log("[".concat(i._stubName,"._resumeReporters (result)  "),t),0==t?i._setUpReporter(i._identity,n,r,["context"],"user_activity",e.to).then(function(e){e&&i.startWorking(e,!1)}):i.startWorking(t,!0)}).catch(function(e){})}else i.stopWorking()})}},{key:"startWorking",value:function(e,t){var n=this;function r(){var t=e.metadata.created,r=e.metadata.lastModified;r||(r=t),n.querySessions(t,r),n.startInterval=setInterval(function(){(r=e.metadata.lastModified)||(r=t),n.querySessions(t,r)},n.config.sessions_query_interval),n.started=!0}n.reporter=e,n.hasStartedQuerying=!1,t&&(n.hasStartedQuerying=!0,r()),e.onSubscription(function(e){e.accept(),console.log("".concat(n._stubName," new subs"),e),n.hasStartedQuerying||(n.hasStartedQuerying=!0,r())}),console.log("".concat(n._stubName," User activity DO created: "),e),e.inviteObservers([n._userActivityVertxHypertyURL])}},{key:"stopWorking",value:function(){clearInterval(this.startInterval),this.started=!1}},{key:"_setUpReporter",value:function(e,t,n,r,o,i){var s=this;return new Promise(function(a,c){var u={resources:r,expires:3600,reporter:i,domain_registration:!1,domain_routing:!1};s._syncher.create(t,[],n,!0,!1,o,e,u).then(function(e){console.log("".concat(s._stubName," REPORTER RETURNED"),e),a(e)}).catch(function(e){console.error("".concat(s._stubName," err"),e),a(null)})})}},{key:"_resumeReporters",value:function(e,t){var n=this;return new Promise(function(r,o){n._syncher.resumeReporters({store:!0,reporter:t}).then(function(o){console.log("[".concat(n._stubName," Reporters resumed"),o);var i=Object.keys(o);if(!(i.length>0))return r(!1);i.forEach(function(i){if(console.log("[".concat(n._stubName),i),console.log("[".concat(n._stubName),o[i]),t==o[i].metadata.reporter&&o[i].metadata.name==e)return r(o[i])})}).catch(function(e){console.info("[".concat(n._stubName," Reporters:"),e)})})}},{key:"querySessions",value:function(e,t){}},{key:"writeToReporter",value:function(e,t,n,r){var o,i;"bike"===e?(o="user_biking_context",i="biking distance in meters"):"walk"===e&&(o="user_walking_context",i="walking distance in meters"),this.reporter.data.values=[{type:o,name:i,unit:"meter",value:t,startTime:n,endTime:r}]}},{key:"refreshAccessToken",value:function(e,t,n){var r=this;return new Promise(function(o,i){var s={type:"execute",from:r._runtimeProtoStubURL,to:r._runtimeSessionURL+"/idm",body:{method:"refreshAccessToken",params:{resources:["user_activity_context"],domain:n}}};r._bus.postMessage(s,function(n){console.log("[".concat(r._stubName,".refreshAccessToken] reply "),n),n.body.hasOwnProperty("value")?(r._accessToken=n.body.value,r.querySessions(e,t),o()):i(n.body)})})}},{key:"_sendStatus",value:function(e,t){console.log("[[".concat(this._stubName,"] status changed] to "),e),this._state=e;var n={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(n.body.desc=t),this._bus.postMessage(n)}},{key:"descriptor",get:function(){return protostubDescriptor}},{key:"name",get:function(){return protostubDescriptor.name}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()}]).default});