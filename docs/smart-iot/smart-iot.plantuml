@startuml
autonumber 
participant App
participant VertxHyperty
participant SmartIotProtostub
participant SmartIot
participant Gateway
participant Device
participant Stream

== Setup ==

SmartIot <- SmartIotProtostub : Authentication

SmartIot --> SmartIotProtostub : Access Token

SmartIot <- SmartIotProtostub : Register App

SmartIot --> SmartIotProtostub : App Secret

== new device created representing new user ==

App -> SmartIotProtostub : create newUser(CGUID)

SmartIot <- SmartIotProtostub : POST /api/devices {name: <CGUID>}

create Device
SmartIot -> Device : new

SmartIot --> SmartIotProtostub : POST RESPONSE 200 OK (newDeviceID)

App <-- SmartIotProtostub : response 200 OK

== new stream created when user authorises access to data from new 3rd party platform ==

App -> SmartIotProtostub : create newStream(CGUID, 3ptyPlataformID, 3ptyUserId)

SmartIot <- SmartIotProtostub : PUT /api/devices/:<newDeviceID>/streams/:<3ptyUserId> 

create Stream
SmartIot -> Stream : new

SmartIot --> SmartIotProtostub : PUT RESPONSE 204 OK

VertxHyperty <- SmartIotProtostub : invite "context://<3pty-platform-domain>/<3ptyUserId>"

VertxHyperty -> SmartIotProtostub : subscribe "context://edpdistribuicao.pt/<3ptyUserId>"

App <-- SmartIotProtostub : response 200 OK


== Ask GW to publish to new stream ==

SmartIotProtostub -> SmartIot : POST /api/subscriptions {device-id: <newDeviceID>, stream: <3ptyUserId>, point_of_contact = <protostubEndPoint>}

SmartIotProtostub <-- SmartIot : POST 200 OK RESPONSE

SmartIotProtostub -> Gateway : publishUserStream(newDeviceId, 3ptyUserId)

SmartIotProtostub <-- Gateway : ok

== Data publish ==

Gateway -> Stream : write 3rd party data values

Stream -> SmartIotProtostub : post 3rd party data values

VertxHyperty <-- SmartIotProtostub : stream 3rd party data values

@enduml